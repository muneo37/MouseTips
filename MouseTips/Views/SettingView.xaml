<Window
    x:Class="MouseTips.Views.SettingView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:bh="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:c="clr-namespace:MouseTips.ExtendedControls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:ex="clr-namespace:MouseTips.ExtendedControls"
    xmlns:local="clr-namespace:MouseTips.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:s="clr-namespace:System;assembly=mscorlib"
    xmlns:vm="clr-namespace:MouseTips.ViewModels"
    x:Name="root"
    Width="400"
    Height="300"
    d:DataContext="{d:DesignInstance Type=vm:SettingViewModel}"
    AllowsTransparency="True"
    Left="{Binding WindowLeft, Mode=TwoWay}"
    ShowInTaskbar="False"
    Top="{Binding WindowBottom, Mode=TwoWay}"
    WindowStyle="None"
    Topmost="True"
    mc:Ignorable="d">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisible" />
        <SolidColorBrush x:Key="DarkBackground" Color="#222222" />
        <SolidColorBrush x:Key="DarkForeground" Color="Gainsboro" />
        <SolidColorBrush x:Key="ContentBackground" Color="#333333" />
        <SolidColorBrush x:Key="DarkMouseEnter" Color="#444444" />
        <SolidColorBrush x:Key="ContentColor1" Color="#555555" />
        <SolidColorBrush x:Key="ContentBackground1" Color="#272727" />
        <SolidColorBrush x:Key="AccentColor1" Color="CornflowerBlue" />
        <Style x:Key="MenuButtonStyle" TargetType="ToggleButton">
            <Setter Property="Foreground" Value="{StaticResource DarkForeground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}">
                            <Canvas
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                Width="20"
                                Height="2"
                                >
                                <Ellipse
                                    Canvas.Left="2"
                                    Width="2"
                                    Height="2"
                                    Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}" />
                                <Ellipse
                                    Canvas.Left="9"
                                    Width="2"
                                    Height="2"
                                    Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}" />
                                <Ellipse
                                    Canvas.Left="16"
                                    Width="2"
                                    Height="2"
                                    Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}" />
                            </Canvas>
                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource AccentColor1}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CloseButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="{StaticResource DarkForeground}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}">
                            <Canvas
                                Width="20"
                                Height="20"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                >
                                <Path
                                    Margin="0"
                                    Data="M5,5 L15,15 M15,5 L5,15"
                                    Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"
                                    StrokeThickness="1" />
                            </Canvas>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource AccentColor1}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CardButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="{StaticResource DarkForeground}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Canvas>
                            <Grid
                                Canvas.Left="2"
                                Canvas.Top="2"
                                Width="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}"
                                Height="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}">
                                <Rectangle
                                    x:Name="UnderRect"
                                    Margin="3"
                                    Fill="{StaticResource ContentColor1}"
                                    RadiusX="5"
                                    RadiusY="5" />
                            </Grid>
                            <Grid
                                x:Name="OverGrid"
                                Width="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}"
                                Height="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}">
                                <Rectangle
                                    x:Name="OverRect"
                                    Margin="3"
                                    Fill="{StaticResource ContentBackground}"
                                    RadiusX="5"
                                    RadiusY="5" />
                                <ContentPresenter
                                    Margin="3,3,3,3"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center" />
                            </Grid>
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseDirectlyOver" Value="True">
                                <Setter TargetName="OverGrid" Property="Canvas.Top" Value="2" />
                                <Setter TargetName="OverGrid" Property="Canvas.Left" Value="2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="StoryboardShowSlide">
            <DoubleAnimation
                Storyboard.TargetName="root"
                Storyboard.TargetProperty="Top"
                To="{Binding WindowBottom}"
                Duration="00:00:00" />
            <DoubleAnimation
                Storyboard.TargetName="root"
                Storyboard.TargetProperty="Top"
                From="{Binding WindowBottom}"
                To="{Binding ViewTop}"
                Duration="00:00:0.2" />
        </Storyboard>
        <Storyboard x:Key="StoryboardSlideLeft">
            <DoubleAnimation
                Storyboard.TargetName="TipsButton"
                Storyboard.TargetProperty="(Canvas.Left)"
                From="0"
                To="400"
                Duration="00:00:0.3" />
        </Storyboard>
        <Storyboard x:Key="StoryboardSlideUp">
            <DoubleAnimation
                By="-40"
                FillBehavior="Stop"
                Storyboard.TargetName="TipsButton"
                Storyboard.TargetProperty="(Canvas.Top)"
                Duration="00:00:0.3" />
        </Storyboard>
        <Storyboard x:Key="StoryboardSlideUpReset">
            <DoubleAnimation
                Storyboard.TargetName="TipsButton"
                Storyboard.TargetProperty="(Canvas.Top)"
                To="0"
                Duration="00:00:01" />
        </Storyboard>
        <!--  サイズと色の定義。簡潔に記述する為に半透明の白で指定しているので、親の背景色が白の場合は白以外の色を指定してください  -->
        <!--  スクロールバーの幅  -->
        <s:Double x:Key="ScrollBarSize">12</s:Double>
        <!--  ボタンの長さ  -->
        <s:Double x:Key="ScrollBarRepeatButtonSize">16</s:Double>
        <!--  スクロールバーのマージン  -->
        <s:Double x:Key="ScrollBarMarginSize">5</s:Double>
        <!--  スクロールバーの色  -->
        <SolidColorBrush x:Key="ScrollBarColorBrush" Color="#22ffffff" />
        <!--  ボーダーの色  -->
        <SolidColorBrush x:Key="ScrollBarBorderBrush" Color="#22ffffff" />
        <!--  トラック（レーン）の色  -->
        <SolidColorBrush x:Key="ScrollBarTrackBrush" Color="#11ffffff" />
        <!--  三角の色  -->
        <SolidColorBrush x:Key="ScrollBarHilightBrush" Color="#33ffffff" />
        <!--  ボタンを押した時の色  -->
        <SolidColorBrush x:Key="ScrollBarPressedBrush" Color="#55ffffff" />
        <!--  使用不可の色  -->
        <SolidColorBrush x:Key="ScrollBarDisabledBrush" Color="#44ffffff" />

        <!--  終端の三角ボタンのスタイル  -->
        <Style x:Key="ScrollBarRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border
                            x:Name="Border"
                            Margin="0"
                            Background="{StaticResource ScrollBarColorBrush}"
                            BorderBrush="{StaticResource ScrollBarBorderBrush}"
                            BorderThickness="1"
                            CornerRadius="0">
                            <Path
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                                Fill="{StaticResource ScrollBarHilightBrush}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ScrollBarPressedBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource ScrollBarDisabledBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  トラック（レーン）のスタイル  -->
        <Style x:Key="ScrollBarTrackStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  つまみのスタイル  -->
        <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border
                            Background="{StaticResource ScrollBarColorBrush}"
                            BorderBrush="{StaticResource ScrollBarBorderBrush}"
                            BorderThickness="1"
                            CornerRadius="0" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  カスタムスクロールバーのスタイル  -->
        <Style x:Key="CustomScrollBarStyle" TargetType="{x:Type ScrollBar}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <!--  縦向きのスクロールバー  -->
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="{StaticResource ScrollBarSize}" />
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Margin">
                        <Setter.Value>
                            <Thickness
                                Bottom="{StaticResource ScrollBarMarginSize}"
                                Left="0"
                                Right="{StaticResource ScrollBarMarginSize}"
                                Top="{StaticResource ScrollBarMarginSize}" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition MaxHeight="{StaticResource ScrollBarRepeatButtonSize}" />
                                        <RowDefinition />
                                        <RowDefinition MaxHeight="{StaticResource ScrollBarRepeatButtonSize}" />
                                    </Grid.RowDefinitions>
                                    <Border
                                        Grid.RowSpan="3"
                                        Background="{StaticResource ScrollBarTrackBrush}"
                                        CornerRadius="0" />
                                    <RepeatButton
                                        Grid.Row="0"
                                        Height="{StaticResource ScrollBarRepeatButtonSize}"
                                        Command="ScrollBar.LineUpCommand"
                                        Content="M 0 4 L 8 4 L 4 0 Z"
                                        Style="{StaticResource ScrollBarRepeatButtonStyle}" />
                                    <Track
                                        x:Name="PART_Track"
                                        Grid.Row="1"
                                        IsDirectionReversed="true">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarTrackStyle}" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Margin="0,1,0,1" Style="{StaticResource ScrollBarThumbStyle}" />
                                        </Track.Thumb>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarTrackStyle}" />
                                        </Track.IncreaseRepeatButton>
                                    </Track>
                                    <RepeatButton
                                        Grid.Row="2"
                                        Height="{StaticResource ScrollBarRepeatButtonSize}"
                                        Command="ScrollBar.LineDownCommand"
                                        Content="M 0 0 L 4 4 L 8 0 Z"
                                        Style="{StaticResource ScrollBarRepeatButtonStyle}" />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <!--  横向きのスクロールバー  -->
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="Height" Value="{StaticResource ScrollBarSize}" />
                    <Setter Property="Margin">
                        <Setter.Value>
                            <Thickness
                                Bottom="{StaticResource ScrollBarMarginSize}"
                                Left="{StaticResource ScrollBarMarginSize}"
                                Right="{StaticResource ScrollBarMarginSize}"
                                Top="0" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="{StaticResource ScrollBarRepeatButtonSize}" />
                                        <ColumnDefinition />
                                        <ColumnDefinition MaxWidth="{StaticResource ScrollBarRepeatButtonSize}" />
                                    </Grid.ColumnDefinitions>
                                    <Border
                                        Grid.ColumnSpan="3"
                                        Background="{StaticResource ScrollBarTrackBrush}"
                                        CornerRadius="0" />
                                    <RepeatButton
                                        Grid.Column="0"
                                        Width="{StaticResource ScrollBarRepeatButtonSize}"
                                        Command="ScrollBar.LineLeftCommand"
                                        Content="M 4 0 L 4 8 L 0 4 Z"
                                        Style="{StaticResource ScrollBarRepeatButtonStyle}" />
                                    <Track
                                        x:Name="PART_Track"
                                        Grid.Column="1"
                                        IsDirectionReversed="false">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="ScrollBar.PageLeftCommand" Style="{StaticResource ScrollBarTrackStyle}" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Margin="1,0,1,0" Style="{StaticResource ScrollBarThumbStyle}" />
                                        </Track.Thumb>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="ScrollBar.PageRightCommand" Style="{StaticResource ScrollBarTrackStyle}" />
                                        </Track.IncreaseRepeatButton>
                                    </Track>
                                    <RepeatButton
                                        Grid.Column="2"
                                        Width="{StaticResource ScrollBarRepeatButtonSize}"
                                        Command="ScrollBar.LineRightCommand"
                                        Content="M 0 0 L 4 4 L 0 8 Z"
                                        Style="{StaticResource ScrollBarRepeatButtonStyle}" />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--  カスタム ScrollViewer のスタイル  -->
        <Style x:Key="CustomScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Row="0" Grid.Column="0">
                                <ScrollContentPresenter.Margin>
                                    <Thickness
                                        Bottom="{StaticResource ScrollBarMarginSize}"
                                        Left="{StaticResource ScrollBarMarginSize}"
                                        Right="{StaticResource ScrollBarMarginSize}"
                                        Top="{StaticResource ScrollBarMarginSize}" />
                                </ScrollContentPresenter.Margin>
                            </ScrollContentPresenter>
                            <ScrollBar
                                x:Name="PART_VerticalScrollBar"
                                Grid.Row="0"
                                Grid.Column="1"
                                Maximum="{TemplateBinding ScrollableHeight}"
                                Orientation="Vertical"
                                Style="{StaticResource CustomScrollBarStyle}"
                                ViewportSize="{TemplateBinding ViewportHeight}"
                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                Value="{TemplateBinding VerticalOffset}" />
                            <ScrollBar
                                x:Name="PART_HorizontalScrollBar"
                                Grid.Row="1"
                                Grid.Column="0"
                                Maximum="{TemplateBinding ScrollableWidth}"
                                Orientation="Horizontal"
                                Style="{StaticResource CustomScrollBarStyle}"
                                ViewportSize="{TemplateBinding ViewportWidth}"
                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                Value="{TemplateBinding HorizontalOffset}" />
                            <Border Grid.Row="1" Grid.Column="1" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Setter Property="Background" Value="{StaticResource DarkBackground}" />
            <Setter Property="Foreground" Value="{StaticResource DarkForeground}" />
        </Style>
    </Window.Style>
    <bh:Interaction.Triggers>
        <bh:DataTrigger Binding="{Binding SlideUp}" Value="true">
            <bh:DataTrigger.Actions>
                <bh:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource StoryboardShowSlide}" />
            </bh:DataTrigger.Actions>
        </bh:DataTrigger>
        <bh:StoryboardCompletedTrigger Storyboard="{StaticResource StoryboardShowSlide}">
            <bh:CallMethodAction MethodName="ShowSlideCompEvent" TargetObject="{Binding}" />
        </bh:StoryboardCompletedTrigger>
        <bh:StoryboardCompletedTrigger Storyboard="{StaticResource StoryboardSlideLeft}">
            <bh:CallMethodAction MethodName="SlideLeftCompEvent" TargetObject="{Binding}" />
        </bh:StoryboardCompletedTrigger>
        <bh:StoryboardCompletedTrigger Storyboard="{StaticResource StoryboardSlideUp}">
            <bh:CallMethodAction MethodName="SlideUpCompEvent" TargetObject="{Binding}" />
        </bh:StoryboardCompletedTrigger>
        <bh:PropertyChangedTrigger Binding="{Binding Visibility, ElementName=root}">
            <bh:InvokeCommandAction Command="{Binding VisibleChangedCommand}" />
        </bh:PropertyChangedTrigger>
    </bh:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="40" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20" />
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Image Grid.Column="0" Source="{Binding IconImage}" />
            <TextBlock
                Grid.Column="1"
                Foreground="{StaticResource AccentColor1}"
                Text="MouseTips" 
                VerticalAlignment="Center"/>
            <ToggleButton Margin="3" Grid.Column="2" Style="{StaticResource MenuButtonStyle}" Background="{StaticResource DarkBackground}"/>
            <Button
                Margin="3"
                Grid.Column="3"
                Style="{StaticResource CloseButtonStyle}" Click="OnCloseClick" Background="{StaticResource DarkBackground}"/>
        </Grid>
        <TextBox
            x:Name="InputText"
            Grid.Row="1"
            Margin="15, 3, 15, 3"
            Background="{StaticResource ContentBackground}"
            BorderThickness="0"
            Foreground="{StaticResource DarkForeground}">
            <TextBox.InputBindings>
                <KeyBinding
                    Command="{Binding InputTextCommand}"
                    CommandParameter="{Binding ElementName=InputText}"
                    Gesture="Enter" />
            </TextBox.InputBindings>
        </TextBox>
        <ScrollViewer
            Grid.Row="2"
            HorizontalScrollBarVisibility="Hidden"
            Style="{StaticResource CustomScrollViewerStyle}"
            VerticalScrollBarVisibility="Auto">
            <ItemsControl ItemsSource="{Binding TipsItems}" AlternationCount="{x:Static s:Int32.MaxValue}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Canvas
                            x:Name="TipsCanvas"
                            Width="370"
                            Height="40"
                            Visibility="{Binding IsVisible, Mode=TwoWay}">
                            <Button
                                x:Name="TipsButton"
                                Canvas.Left="0"
                                Canvas.Top="0"
                                Width="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}"
                                Height="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}"
                                Command="{Binding DataContext.MouseUpCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                CommandParameter="{Binding Path=(ItemsControl.AlternationIndex), RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource CardButtonStyle}">
                                <Grid Width="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}"
                                      Height="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}"
                                      >
                                    <Grid Margin="10,0,10,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="30" />
                                            <ColumnDefinition Width="30" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" VerticalAlignment="Center">
                                            <Run
                                                FontSize="20"
                                                FontWeight="Bold"
                                                Text="{Binding BigText}" />
                                            <Run FontSize="12" Text="{Binding SubText}" />
                                        </TextBlock>
                                        <Grid Grid.Column="1">
                                            <ToggleButton IsChecked="{Binding MenuChecked}" Grid.Column="1" x:Name="MenuItemButton" Style="{StaticResource MenuButtonStyle}" Background="{StaticResource ContentBackground}" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"/>
                                            <Popup IsOpen="{Binding MenuChecked}" StaysOpen="True" AllowsTransparency="False">
                                                <Canvas Width="150" Height="80" Background="{StaticResource ContentBackground1}">
                                                    <Grid
                                                        Width="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}"
                                                        Height="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}"
                                                        >
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="*" />
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition />
                                                            <RowDefinition />
                                                        </Grid.RowDefinitions>
                                                        <TextBlock
                                                            Grid.Row="0"
                                                            Grid.Column="0"
                                                            Margin="3"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center"
                                                            FontSize="8">
                                                            Start<LineBreak />
                                                            Time</TextBlock>
                                                        <TextBlock
                                                            Grid.Row="1"
                                                            Grid.Column="0"
                                                            Margin="5"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center"
                                                            FontSize="8">
                                                            Stop<LineBreak />
                                                            Time</TextBlock>
                                                        <ex:TimePicker
                                                            Grid.Row="0"
                                                            Grid.Column="1"
                                                            Width="120"
                                                            Time="{Binding StartTime}"
                                                            />
                                                        <ex:TimePicker
                                                            Grid.Row="1"
                                                            Grid.Column="1"
                                                            Width="120"
                                                            Time="{Binding StopTime}"
                                                            />
                                                    </Grid>
                                                </Canvas>
                                            </Popup>
                                        </Grid>
                                        <Button Grid.Column="2" Style="{StaticResource CloseButtonStyle}" Background="{StaticResource ContentBackground}" />
                                    </Grid>
                                </Grid>
                            </Button>
                        </Canvas>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding Archive}" Value="true">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource StoryboardSlideLeft}" />
                                </DataTrigger.EnterActions>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding SlideUp}" Value="true">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource StoryboardSlideUp}" />
                                </DataTrigger.EnterActions>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>
    </Grid>
</Window>
